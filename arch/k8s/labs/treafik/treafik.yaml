# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#   name: traefik-ingress-controller
# rules:
#   - apiGroups:
#       - ""
#     resources:
#       - services
#       - endpoints
#       - secrets
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - extensions
#     resources:
#       - ingresses
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#     - extensions
#     resources:
#     - ingress/status
#     verbs:
#     - update
# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: traefik-ingress-controller
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: traefik-ingress-controller
# subjects:
#   - kind: ServiceAccount
#     name: traefik-ingress-controller
#     namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik-ingress-lb
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
      name: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      restartPolicy: Always
      serviceAccountName: traefik-ingress-controller
      containers:
      - image: traefik:v2.2.8
        name: traefik-ingress-lb
        imagePullPolicy: IfNotPresent
        ports:
          - name: admin
            containerPort: 8080
            hostPort: 8080
          - name: websecure
            containerPort: 4443
            hostPort: 4443
          - name: web
            containerPort: 80
            hostPort: 80
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        args:
          - --accesslog
          - --api.insecure
          - --entryPoints.traefik.address=:8080
          - --entryPoints.web.address=:80
          - --entryPoints.websecure.address=:443
          - --api.dashboard=true
          - --ping=true
          - --providers.kubernetescrd
          - --providers.kubernetesingress
      nodeSelector:
        edgenode: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  type: NodePort
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
    - protocol: TCP
      port: 443
      name: websecure